__version__: str
__credits__: str

from typing import Iterable, Tuple, TypeAlias

_media_range_: TypeAlias = Tuple[str, str, dict[str, str]]
_mime_type_: TypeAlias = Tuple[str, str, dict[str, str]]

class MimeTypeParseException(ValueError): ...

def parse_mime_type(mime_type: str) -> _mime_type_: ...
def parse_media_range(range: str) -> _media_range_: ...
def quality_and_fitness_parsed(
    mime_type: str, parsed_ranges: Iterable[_media_range_]
) -> Tuple[float, int]: ...
def quality_parsed(mime_type: str, parsed_ranges: Iterable[_media_range_]) -> float: ...
def quality(mime_type: str, ranges: str) -> float: ...
def best_match(supported: Iterable[str], header: str) -> str: ...
